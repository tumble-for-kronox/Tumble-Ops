---
# Source: grafana/charts/grafana/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: false
metadata:
  labels:
    helm.sh/chart: grafana-8.4.8
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/version: "11.1.4"
    app.kubernetes.io/managed-by: Helm
  name: grafana
  namespace: monitoring
---
# Source: grafana/charts/grafana/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana
  namespace: monitoring
  labels:
    helm.sh/chart: grafana-8.4.8
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/version: "11.1.4"
    app.kubernetes.io/managed-by: Helm
data:
  
  grafana.ini: |
    [analytics]
    check_for_updates = true
    [grafana_net]
    url = https://grafana.net
    [log]
    mode = console
    [paths]
    data = /var/lib/grafana/
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
    [server]
    domain = grafana.tumbleforkronox.com
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - access: proxy
      isDefault: true
      name: Prometheus
      type: prometheus
      url: http://prometheus-server.monitoring.svc.cluster.local:80
    - access: proxy
      name: Loki
      type: loki
      url: http://loki-gateway.logging.svc.cluster.local:80
  download_dashboards.sh: |
    #!/usr/bin/env sh
    set -euf
---
# Source: grafana/charts/grafana/templates/dashboards-json-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-default
  namespace: monitoring
  labels:
    helm.sh/chart: grafana-8.4.8
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/version: "11.1.4"
    app.kubernetes.io/managed-by: Helm
    dashboard-provider: default
data:
  tumble-backend-dashboard.json:
    |-
      {
        "annotations": {
          "list": [
            {
              "builtIn": 1,
              "datasource": {
                "type": "datasource",
                "uid": "grafana"
              },
              "enable": true,
              "hide": true,
              "iconColor": "rgba(0, 211, 255, 1)",
              "name": "Annotations & Alerts",
              "target": {
                "limit": 100,
                "matchAny": false,
                "tags": [],
                "type": "dashboard"
              },
              "type": "dashboard"
            }
          ]
        },
        "editable": true,
        "fiscalYearStartMonth": 0,
        "gnetId": 10427,
        "graphTooltip": 0,
        "id": 13,
        "iteration": 1659028885976,
        "links": [],
        "liveNow": false,
        "panels": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": ""
            },
            "description": "",
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "palette-classic"
                },
                "custom": {
                  "axisLabel": "",
                  "axisPlacement": "auto",
                  "axisSoftMax": 0,
                  "barAlignment": 0,
                  "drawStyle": "line",
                  "fillOpacity": 0,
                  "gradientMode": "none",
                  "hideFrom": {
                    "legend": false,
                    "tooltip": false,
                    "viz": false
                  },
                  "lineInterpolation": "linear",
                  "lineWidth": 1,
                  "pointSize": 5,
                  "scaleDistribution": {
                    "type": "linear"
                  },
                  "showPoints": "auto",
                  "spanNulls": false,
                  "stacking": {
                    "group": "A",
                    "mode": "none"
                  },
                  "thresholdsStyle": {
                    "mode": "off"
                  }
                },
                "mappings": [],
                "min": 0,
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "red",
                      "value": 80
                    }
                  ]
                },
                "unit": "bytes"
              },
              "overrides": [
                {
                  "matcher": {
                    "id": "byRegexp",
                    "options": "GC gen\\d"
                  },
                  "properties": [
                    {
                      "id": "custom.axisPlacement",
                      "value": "right"
                    },
                    {
                      "id": "unit",
                      "value": "ops"
                    },
                    {
                      "id": "custom.drawStyle",
                      "value": "points"
                    },
                    {
                      "id": "custom.axisSoftMin",
                      "value": 0
                    },
                    {
                      "id": "custom.pointSize",
                      "value": 9
                    },
                    {
                      "id": "custom.stacking",
                      "value": {
                        "group": "A",
                        "mode": "normal"
                      }
                    }
                  ]
                }
              ]
            },
            "gridPos": {
              "h": 10,
              "w": 14,
              "x": 0,
              "y": 0
            },
            "id": 22,
            "options": {
              "legend": {
                "calcs": [],
                "displayMode": "list",
                "placement": "bottom"
              },
              "tooltip": {
                "mode": "multi",
                "sort": "none"
              }
            },
            "targets": [
              {
                "datasource": {
                  "type": "prometheus",
                  "uid": ""
                },
                "editorMode": "code",
                "exemplar": false,
                "expr": "sum(increase(dotnet_collection_count_total{instance =~ \"$instances|.*:7036\"}[5m])) by (generation) != 0",
                "hide": false,
                "instant": false,
                "legendFormat": "GC gen{{generation}}",
                "range": true,
                "refId": "E"
              },
              {
                "datasource": {
                  "type": "prometheus",
                  "uid": ""
                },
                "editorMode": "code",
                "expr": "sum(process_working_set_bytes{instance =~ \"$instances|.*:7036\"})",
                "hide": false,
                "legendFormat": "Working Set",
                "range": true,
                "refId": "A"
              },
              {
                "datasource": {
                  "type": "prometheus",
                  "uid": ""
                },
                "editorMode": "code",
                "expr": "sum(process_private_memory_bytes{instance =~ \"$instances|.*:7036\"})",
                "hide": false,
                "legendFormat": "Private",
                "range": true,
                "refId": "B"
              },
              {
                "datasource": {
                  "type": "prometheus",
                  "uid": ""
                },
                "editorMode": "code",
                "expr": "sum(dotnet_total_memory_bytes{instance =~ \"$instances|.*:7036\"}) ",
                "hide": false,
                "legendFormat": ".NET Objects",
                "range": true,
                "refId": "C"
              },
              {
                "datasource": {
                  "type": "prometheus",
                  "uid": ""
                },
                "expr": "sum(process_virtual_memory_bytes{instance =~ \"$instances|.*:7036\"}) ",
                "hide": true,
                "refId": "D"
              }
            ],
            "title": "Memory management",
            "type": "timeseries"
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": ""
            },
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "palette-classic"
                },
                "custom": {
                  "axisLabel": "",
                  "axisPlacement": "auto",
                  "barAlignment": 0,
                  "drawStyle": "line",
                  "fillOpacity": 29,
                  "gradientMode": "none",
                  "hideFrom": {
                    "legend": false,
                    "tooltip": false,
                    "viz": false
                  },
                  "lineInterpolation": "stepBefore",
                  "lineWidth": 1,
                  "pointSize": 5,
                  "scaleDistribution": {
                    "type": "linear"
                  },
                  "showPoints": "auto",
                  "spanNulls": false,
                  "stacking": {
                    "group": "A",
                    "mode": "none"
                  },
                  "thresholdsStyle": {
                    "mode": "off"
                  }
                },
                "mappings": [],
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "red",
                      "value": 80
                    }
                  ]
                },
                "unit": "percentunit"
              },
              "overrides": [
                {
                  "matcher": {
                    "id": "byName",
                    "options": "Handles"
                  },
                  "properties": [
                    {
                      "id": "custom.axisPlacement",
                      "value": "right"
                    },
                    {
                      "id": "unit",
                      "value": "none"
                    },
                    {
                      "id": "custom.fillOpacity",
                      "value": 0
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "Threads"
                  },
                  "properties": [
                    {
                      "id": "custom.axisPlacement",
                      "value": "right"
                    },
                    {
                      "id": "unit",
                      "value": "string"
                    },
                    {
                      "id": "custom.fillOpacity",
                      "value": 0
                    }
                  ]
                }
              ]
            },
            "gridPos": {
              "h": 11,
              "w": 10,
              "x": 14,
              "y": 0
            },
            "id": 24,
            "options": {
              "legend": {
                "calcs": [],
                "displayMode": "list",
                "placement": "bottom"
              },
              "tooltip": {
                "mode": "single",
                "sort": "none"
              }
            },
            "targets": [
              {
                "datasource": {
                  "type": "prometheus",
                  "uid": ""
                },
                "editorMode": "code",
                "expr": "sum(rate(process_cpu_seconds_total{instance =~ \"$instances|.*:7036\"}[5m])) by (instance)",
                "legendFormat": "{{instance}}",
                "range": true,
                "refId": "A"
              },
              {
                "datasource": {
                  "type": "prometheus",
                  "uid": ""
                },
                "editorMode": "code",
                "expr": "sum(process_open_handles)",
                "hide": true,
                "legendFormat": "Handles",
                "range": true,
                "refId": "B"
              },
              {
                "datasource": {
                  "type": "prometheus",
                  "uid": ""
                },
                "editorMode": "code",
                "expr": "sum(process_num_threads)",
                "hide": true,
                "legendFormat": "Threads",
                "range": true,
                "refId": "C"
              }
            ],
            "title": "CPU Usage",
            "type": "timeseries"
          },
          {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": {
              "type": "prometheus",
              "uid": ""
            },
            "description": "",
            "fieldConfig": {
              "defaults": {
                "links": []
              },
              "overrides": []
            },
            "fill": 1,
            "fillGradient": 0,
            "gridPos": {
              "h": 7,
              "w": 14,
              "x": 0,
              "y": 10
            },
            "hiddenSeries": false,
            "id": 20,
            "legend": {
              "avg": false,
              "current": false,
              "max": false,
              "min": false,
              "show": true,
              "total": false,
              "values": false
            },
            "lines": true,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "connected",
            "options": {
              "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "9.0.3",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
              {
                "datasource": {
                  "type": "prometheus",
                  "uid": ""
                },
                "expr": "sum(increase(prometheus_http_request_duration_seconds_bucket[5m])) by (le)",
                "format": "heatmap",
                "interval": "",
                "intervalFactor": 1,
                "legendFormat": "{{le}}",
                "refId": "A"
              }
            ],
            "thresholds": [],
            "timeRegions": [],
            "title": "The duration of HTTP requests",
            "tooltip": {
              "shared": true,
              "sort": 0,
              "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
              "mode": "time",
              "show": true,
              "values": []
            },
            "yaxes": [
              {
                "format": "short",
                "logBase": 1,
                "show": true
              },
              {
                "format": "short",
                "logBase": 1,
                "show": true
              }
            ],
            "yaxis": {
              "align": false
            }
          },
          {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": {
              "type": "prometheus",
              "uid": ""
            },
            "decimals": 0,
            "description": "",
            "fieldConfig": {
              "defaults": {
                "links": []
              },
              "overrides": []
            },
            "fill": 1,
            "fillGradient": 0,
            "gridPos": {
              "h": 7,
              "w": 10,
              "x": 14,
              "y": 11
            },
            "hiddenSeries": false,
            "id": 28,
            "legend": {
              "alignAsTable": false,
              "avg": false,
              "current": false,
              "max": false,
              "min": false,
              "show": true,
              "total": false,
              "values": false
            },
            "lines": true,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "connected",
            "options": {
              "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "9.0.3",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
              {
                "datasource": {
                  "type": "prometheus",
                  "uid": ""
                },
                "expr": "sum(process_num_threads{instance =~ \"$instances|.*:7036\"}) by (instance)",
                "format": "time_series",
                "intervalFactor": 1,
                "legendFormat": "{{job}}",
                "refId": "A"
              }
            ],
            "thresholds": [],
            "timeRegions": [],
            "title": "Total number of threads",
            "tooltip": {
              "shared": true,
              "sort": 0,
              "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
              "mode": "time",
              "show": true,
              "values": []
            },
            "yaxes": [
              {
                "$$hashKey": "object:404",
                "decimals": 0,
                "format": "short",
                "logBase": 1,
                "show": true
              },
              {
                "$$hashKey": "object:405",
                "format": "short",
                "logBase": 1,
                "show": true
              }
            ],
            "yaxis": {
              "align": false
            }
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": ""
            },
            "description": "",
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "mappings": [
                  {
                    "options": {
                      "match": "null",
                      "result": {
                        "text": "Error"
                      }
                    },
                    "type": "special"
                  }
                ],
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "red",
                      "value": 80
                    }
                  ]
                },
                "unit": "s"
              },
              "overrides": []
            },
            "gridPos": {
              "h": 7,
              "w": 7,
              "x": 7,
              "y": 17
            },
            "id": 2,
            "interval": "",
            "links": [],
            "maxDataPoints": 100,
            "options": {
              "colorMode": "none",
              "graphMode": "none",
              "justifyMode": "auto",
              "orientation": "horizontal",
              "reduceOptions": {
                "calcs": ["lastNotNull"],
                "fields": "",
                "values": false
              },
              "text": {},
              "textMode": "auto"
            },
            "pluginVersion": "9.0.3",
            "targets": [
              {
                "datasource": {
                  "type": "prometheus",
                  "uid": ""
                },
                "editorMode": "code",
                "expr": "time() - process_start_time_seconds{instance =~ \"$instances|.*:7036\"}",
                "format": "time_series",
                "intervalFactor": 1,
                "legendFormat": "{{instance}}",
                "range": true,
                "refId": "A"
              }
            ],
            "title": "Uptime",
            "type": "stat"
          },
          {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": {
              "type": "prometheus",
              "uid": ""
            },
            "decimals": 0,
            "description": "",
            "fieldConfig": {
              "defaults": {
                "links": []
              },
              "overrides": []
            },
            "fill": 1,
            "fillGradient": 0,
            "gridPos": {
              "h": 6,
              "w": 10,
              "x": 14,
              "y": 18
            },
            "hiddenSeries": false,
            "id": 26,
            "interval": "",
            "legend": {
              "alignAsTable": false,
              "avg": false,
              "current": false,
              "max": false,
              "min": false,
              "show": true,
              "total": false,
              "values": false
            },
            "lines": true,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "connected",
            "options": {
              "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "9.0.3",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
              {
                "datasource": {
                  "type": "prometheus",
                  "uid": ""
                },
                "editorMode": "code",
                "expr": "sum(process_open_handles{instance =~ \"$instances|.*:7036\"}) by (instance)",
                "format": "time_series",
                "interval": "",
                "intervalFactor": 1,
                "legendFormat": "{{instance}}",
                "range": true,
                "refId": "A"
              }
            ],
            "thresholds": [],
            "timeRegions": [],
            "title": "Number of open handles",
            "tooltip": {
              "shared": true,
              "sort": 0,
              "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
              "mode": "time",
              "show": true,
              "values": []
            },
            "yaxes": [
              {
                "$$hashKey": "object:774",
                "decimals": 0,
                "format": "short",
                "logBase": 1,
                "show": true
              },
              {
                "$$hashKey": "object:775",
                "format": "short",
                "logBase": 1,
                "show": true
              }
            ],
            "yaxis": {
              "align": false
            }
          }
        ],
        "refresh": "5s",
        "schemaVersion": 36,
        "style": "dark",
        "tags": ["prometheus-net", "net", "prometheus", ".net", ".net core"],
        "templating": {
          "list": [
            {
              "auto": false,
              "auto_count": 30,
              "auto_min": "10s",
              "current": {
                "selected": false,
                "text": "1m",
                "value": "1m"
              },
              "hide": 0,
              "name": "interval",
              "options": [
                {
                  "selected": true,
                  "text": "1m",
                  "value": "1m"
                },
                {
                  "selected": false,
                  "text": "5m",
                  "value": "5m"
                },
                {
                  "selected": false,
                  "text": "10m",
                  "value": "10m"
                },
                {
                  "selected": false,
                  "text": "30m",
                  "value": "30m"
                },
                {
                  "selected": false,
                  "text": "1h",
                  "value": "1h"
                },
                {
                  "selected": false,
                  "text": "6h",
                  "value": "6h"
                },
                {
                  "selected": false,
                  "text": "12h",
                  "value": "12h"
                },
                {
                  "selected": false,
                  "text": "1d",
                  "value": "1d"
                },
                {
                  "selected": false,
                  "text": "7d",
                  "value": "7d"
                },
                {
                  "selected": false,
                  "text": "14d",
                  "value": "14d"
                },
                {
                  "selected": false,
                  "text": "30d",
                  "value": "30d"
                }
              ],
              "query": "1m,5m,10m,30m,1h,6h,12h,1d,7d,14d,30d",
              "refresh": 2,
              "skipUrlSync": false,
              "type": "interval"
            },
            {
              "current": {
                "selected": true,
                "text": ["All"],
                "value": ["$__all"]
              },
              "datasource": {
                "type": "prometheus",
                "uid": ""
              },
              "definition": "label_values(http_requests_received_total, instance)",
              "hide": 0,
              "includeAll": true,
              "label": "instances",
              "multi": true,
              "name": "instances",
              "options": [],
              "query": {
                "query": "label_values(http_requests_received_total, instance)",
                "refId": "Prometheus-1-instances-Variable-Query"
              },
              "refresh": 1,
              "regex": "",
              "skipUrlSync": false,
              "sort": 1,
              "tagValuesQuery": "",
              "tagsQuery": "",
              "type": "query",
              "useTags": false
            }
          ]
        },
        "time": {
          "from": "now-6h",
          "to": "now"
        },
        "timepicker": {
          "refresh_intervals": [
            "5s",
            "10s",
            "5m",
            "1m",
            "5m",
            "15m",
            "30m",
            "1h",
            "2h",
            "1d"
          ],
          "time_options": ["5m", "15m", "1h", "6h", "12h", "24h", "2d", "7d", "30d"]
        },
        "timezone": "",
        "title": "prometheus-net",
        "uid": "zyAf4i4Zz",
        "version": 2,
        "weekStart": ""
      }
---
# Source: grafana/charts/grafana/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    helm.sh/chart: grafana-8.4.8
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/version: "11.1.4"
    app.kubernetes.io/managed-by: Helm
  name: grafana-clusterrole
rules: []
---
# Source: grafana/charts/grafana/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: grafana-clusterrolebinding
  labels:
    helm.sh/chart: grafana-8.4.8
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/version: "11.1.4"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: grafana
    namespace: monitoring
roleRef:
  kind: ClusterRole
  name: grafana-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
# Source: grafana/charts/grafana/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: grafana
  namespace: monitoring
  labels:
    helm.sh/chart: grafana-8.4.8
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/version: "11.1.4"
    app.kubernetes.io/managed-by: Helm
rules: []
---
# Source: grafana/charts/grafana/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: grafana
  namespace: monitoring
  labels:
    helm.sh/chart: grafana-8.4.8
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/version: "11.1.4"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: grafana
subjects:
- kind: ServiceAccount
  name: grafana
  namespace: monitoring
---
# Source: grafana/charts/grafana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
  labels:
    helm.sh/chart: grafana-8.4.8
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/version: "11.1.4"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: service
      port: 80
      protocol: TCP
      targetPort: 3000
  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
---
# Source: grafana/charts/grafana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    helm.sh/chart: grafana-8.4.8
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/version: "11.1.4"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: grafana
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: grafana
      annotations:
        checksum/config: 130acdc3690d0621045b5dc2aabecc2e01e259cf5273a7f09704b8ef307120bc
        checksum/dashboards-json-config: a57c7e53a913bc1349cadfee02f0221ccbddbc54010b8b731e3dd166da3578d6
        checksum/sc-dashboard-provider-config: e70bf6a851099d385178a76de9757bb0bef8299da6d8443602590e44f05fdf24
        kubectl.kubernetes.io/default-container: grafana
    spec:
      
      serviceAccountName: grafana
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsNonRoot: true
        runAsUser: 472
      initContainers:
        - name: download-dashboards
          image: "docker.io/curlimages/curl:7.85.0"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh"]
          args: [ "-c", "mkdir -p /var/lib/grafana/dashboards/default && /bin/sh -x /etc/grafana/download_dashboards.sh" ]
          env:
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/download_dashboards.sh"
              subPath: download_dashboards.sh
            - name: storage
              mountPath: "/var/lib/grafana"
      enableServiceLinks: true
      containers:
        - name: grafana
          image: "docker.io/grafana/grafana:11.1.4"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/grafana.ini"
              subPath: grafana.ini
            - name: storage
              mountPath: "/var/lib/grafana"
            - name: dashboards-default
              mountPath: "/var/lib/grafana/dashboards/default/tumble-backend-dashboard.json"
              subPath: "tumble-backend-dashboard.json"
            - name: config
              mountPath: "/etc/grafana/provisioning/datasources/datasources.yaml"
              subPath: "datasources.yaml"
          ports:
            - name: grafana
              containerPort: 3000
              protocol: TCP
            - name: gossip-tcp
              containerPort: 9094
              protocol: TCP
            - name: gossip-udp
              containerPort: 9094
              protocol: UDP
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana-admin
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-admin
                  key: admin-password
            - name: GF_PATHS_DATA
              value: /var/lib/grafana/
            - name: GF_PATHS_LOGS
              value: /var/log/grafana
            - name: GF_PATHS_PLUGINS
              value: /var/lib/grafana/plugins
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
      volumes:
        - name: config
          configMap:
            name: grafana
        - name: dashboards-default
          configMap:
            name: grafana-dashboards-default
        - name: storage
          emptyDir: {}
---
# Source: grafana/charts/grafana/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana
  namespace: monitoring
  labels:
    helm.sh/chart: grafana-8.4.8
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/version: "11.1.4"
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: "/"
spec:
  tls:
    - hosts:
      - grafana.tumbleforkronox.com
      secretName: letsencrypt-prod
  rules:
    - host: "grafana.tumbleforkronox.com"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  number: 80
